#!/usr/bin/python

# **********************************************
# SIMULATOR 1: RANDOM-SCANNING WORM PROPAGATION
# **********************************************


import random
import matplotlib.pyplot as plt

random.seed()

simulRuns = 3					#number of simulation runs
runtime = 700					#simulation time
omega = 100000					#address space size
eta = 3							#scan rate
N = 1000						#total vulnerable
######################################################################################
I_t = []						#list of lists: [[], [], []]
								#index 1 = simulation run #
								#index 2 = number of infected computers at each time tick
for i in range(simulRuns):
	I_t = I_t + [[]]

for s in range(simulRuns):				# for each simulation run

	NodeStatus = [0]
	# Initialize the network IP address space, and assign the immune and susceptible computers
	for i in range(omega):
		NodeStatus = NodeStatus + ["immune"]
	for i in range(0, 100):
		for j in range(1, 11):
			NodeStatus[j+i*1000] = "susceptible"

	infectedNum = 0						# infected computers by time t
	ticks = 0	
	# The worm starts its infection within this network from 1 initially infected machine
	# that has the IP address of 1001
	NodeStatus[1001] = "infectious"
	infectedNum += 1

	I_t[s] = I_t[s] + [infectedNum]
	
	for t in range(1, runtime):				# for "runtime" amount of time. MUST start at 1. 
											# we know at t = 0, infectedNum = 1

		if infectedNum <1000:				# if we haven't infected all 1000 computers

			# Find out which computers were infected coming into this time tick:
			currently_infected = [1001]
			for i in range(0, 100):
				for j in range(1, 11):
					if NodeStatus[j+i*1000] == "infectious":
						currently_infected = currently_infected + [j+i*1000]	

			# Then for each currently infected computer...
			for i in range(len(currently_infected)):	
				# ...perform eta number of scans for susceptible computers
				for k in range(eta):									
					ip = random.randint(1, 100000)				# Select random IP address: 1 <= ip <= 100000
					if NodeStatus[ip] == "susceptible":			# if scan finds that ip to be susceptible...
						NodeStatus[ip] = "infectious"			# ...infect it immediately
						infectedNum += 1			

			I_t[s] = I_t[s] + [infectedNum]						# update the I(t) array
			ticks += 1

	print("Simulation", s+1,"ended in ", ticks, "ticks")
	print("Computers infected: ", infectedNum)

print("All simulations completed.")

######################################################################################
#	PLOT THE DATA:

for i in range(simulRuns):
	for j in range(runtime - len(I_t[i])):
		I_t[i] = I_t[i] + [1000]

for i in range(simulRuns):
    s = 'Run %s' % (i+1)
    plt.plot(range(0, len(I_t[i])), I_t[i], label= s)
plt.xlabel('Time')
plt.ylabel('No. of Infected Computers')
plt.title("Three Simulation Runs of Random-Scanning Worm Propagation")
plt.legend()
plt.show()

#x axis = runtime 
#y axis = I_t[simulation number][# of infected computers]